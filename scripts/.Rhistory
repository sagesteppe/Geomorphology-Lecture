sand_size_plotter <- function(x){
packing <- packcircles::circleProgressiveLayout(x$size, sizetype = 'area')
data <- cbind(x, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 25)
plot <- ggplot() +
geom_polygon(data = dat.gg, aes(x, y, group = id),
fill = sand_palette[names(sand_palette) == x$name[1]],
colour = "black", alpha = 0.8) +
scale_color_manual(values = sand_palette ) +
theme_void() +
theme(legend.position="none") +
labs(title = gsub(' Sand', '', data$name[1])) +
coord_equal() +
theme(text = element_text(color = 'white'))
return(plot)
}
soil_lkp_tab <-
data.frame(
abbrev = c('S', 'LS', 'SL', 'SCL', 'SC', 'C', 'SiC', 'SiCL', 'SiL', 'Si', 'L', 'CL'),
name = c('Sand', 'Loamy Sand', 'Sandy Loam', 'Sandy Clay Loam', 'Sandy Clay',
'Clay', 'Silty Clay', 'Silty Clay Loam', 'Silt Loam', 'Silt', 'Loam', 'Clay Loam')
)
# convert percent volume to proportion of volumes
#input order must be: CLAY, Silt, SAND
particle2size <- function(x){
out <- vector(mode = 'numeric', length = 3)
out[1] <- (x[1] * 0.01) * 10000
out[2] <- round(((x[2] * 0.01) * 10000) / 25.87065, 0)
out[3] <- round(((x[3] * 0.01) * 10000) / 373.1343, 0)
names(out) <- c('Clay', 'Silt', 'Sand')
return(out)
}
#' function for drawing a circle plot of soil constituents
#' @param x a named vector of soil texture percents which add up to 100
#' @example name_ord <- c('Clay', 'Loam', 'Sand')
#' sl <- c(15, 65, 20)
#' silt_loam <- texture_plotted(sl, 'SL')
texture_plotter <- function(x, texture){
part_prcnt <- particle2size(x)
part_mapping <- filter(particle_size, name %in% c('Clay', 'Silt', 'Medium Sand'))
part_mapping <- part_mapping[ reorder(part_mapping$name, part_prcnt), ]
texture <- part_mapping[ rep(seq_len(nrow(part_mapping)), times = part_prcnt), ]
texture <- texture %>%
dplyr::group_by(name) %>%
dplyr::rowwise() %>%
dplyr::mutate(size = sample((size_lower*1000):(size_upper*1000), 1) / 1000)
packing <- packcircles::circleProgressiveLayout(texture$size, sizetype = 'area')
data <- cbind(texture, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 25)
dat.gg$particle <- as.factor(rep(texture$particle, each = nrow(dat.gg)/nrow(texture)))
texture_name <- as.character(soil_lkp_tab[soil_lkp_tab$abbrev == texture, 'name'])
soil_plot <- ggplot() +
geom_polygon(data = dat.gg, aes(x, y, group = id, fill = particle), colour = "black", alpha = 0.6) +
scale_fill_manual(values = soil_palette) +
theme_void() +
labs(
title = texture_name,
subtitle = paste0(names(x), ' = ', as.numeric(x), '%', collapse = "\n")
) +
coord_equal() +
theme(
legend.position="none",
plot.background = element_rect(fill="black"),
plot.title = element_text(color="white") ,
plot.subtitle = element_text(color="white") ,
text = element_text(color = 'white')
)
return(soil_plot)
}
cover_plotter <- function(cover){
df <- expand.grid(x = 0:49, y = 0:49)
df <- df[sample(1:nrow(df), size = (2500 * cover) / 100),]
plot <- ggplot(df, aes(x, y)) +
geom_tile() +
theme_void() +
labs(title = paste0(round( (nrow(df) / 2500) * 100, 1), '%'))
return(plot)
}
setwd('/home/sagesteppe/Documents/assoRted/geomorphology_soils_SOS/scripts')
setwd('/home/sagesteppe/Documents/assoRted/Geomorphology-Lecture/scripts')
setwd('/home/sagesteppe/Documents/assoRted/Geomorphology-Lecture/scripts')
library(packcircles)
library(tidyverse)
library(soiltexture)
library(patchwork)
library(gt)
source('functions.R')
## Soil is composed of three major particles of different sizes. ##
# The soil triangle should be familiar to all of you. This is the one used
# by the USDA, although there are other formats globally - all are quite similar
# they track how much of three components are in the soil
particle_size <- data.frame(
particle = c( rep('sand', times = 5), 'silt', 'clay'),
name = c('Very Coarse Sand', 'Coarse Sand', 'Medium Sand',
'Fine Sand', 'Very Fine Sand', 'Silt', 'Clay'),
size_upper = c(2.0, 1.0, 0.500, 0.2500, 0.1250, 0.002, 0.00001),
size_lower = c(1.0, 0.5, 0.250, 0.1250, 0.0625, 0.050, 0.00200)
)
particle_size$size_midpoint = (particle_size$size_upper + particle_size$size_lower) /2
# Sandy
soil_palette <- c('#C5CBD3', '#DDA448', '#685044')
names(soil_palette) <- c('clay', 'sand', 'silt')
############################## CREATE THE SAND PARTICLE SIZE PLOT PANEL ########################
# this fn relies on 'id' each input row becomes repeated with in dat.gg, dat.gg represents the points
# on the circumference.
# Sand Particle Size layout plot
sand_palette <- c('#8D7429', '#A18031','#B58C39', '#C99840', '#DDA448' )
names(sand_palette) <-
c('Very Coarse Sand', 'Coarse Sand', 'Medium Sand', 'Fine Sand', 'Very Fine Sand')
sand_sizes <- filter(particle_size, particle == 'sand')  # reduce to just sand
sand_sizes <- sand_sizes[rep(seq_len(nrow(sand_sizes)), c(5,10,20,40,80)),] # replicate each sand type ntimes
sand_sizes <- sand_sizes %>%
group_by(name) %>%
rowwise() %>%
mutate(size = sample((size_lower*1000):(size_upper*1000), 1) / 1000) # go big to get relevant decimals
sand_list <- split(sand_sizes, f = sand_sizes$name)
sand_plots <- lapply(sand_list, sand_size_plotter) #  create plots
sand_plots <- sand_plots[names(sand_palette)] # arrange plots from coarse to fine
p <- cowplot::plot_grid(
sand_plots[[1]], sand_plots[[2]], sand_plots[[3]],
sand_plots[[4]], sand_plots[[5]], ncol = 5)
cowplot::save_plot('../images/soil/SandSizes.png', p)
################################################################################
#################   Create example soil textures  ##############################
# sandy loam
# sandy clay loam
# silt loam
png('../images/soil/Soil_Triangle.png', width = 720, height = 720)
par(col.main="white")
TT.plot( class.sys = "USDA.TT",
main = 'USDA Soil Triangle',
bg = 'grey10', col.axis	= 'grey60', col.main = 'white',
grid.col = 'grey30', #class.line.col	= 'black',
class.line.col = '#9AE5E6',
class.lab.col = 'white',
class.lab.show = 'full',
col.lab	= 'grey90')
dev.off()
# all ordered - CLAY, Silt, SAND
name_ord <- c('Clay', 'Silt', 'Sand')
l <- c(20, 35, 45)
scl <- c(30, 10, 60)
sil <- c(15, 65, 20)
sl <- c(15, 15, 70)
names(l) <- name_ord
names(scl) <- name_ord
names(sil) <- name_ord
names(sl) <- name_ord
soils <- list(l, scl, sil, sl)
# soils <- lapply(soils, function(x){ names(x) <- name_ord }) need a '[' somewhere
soil_t <- lapply(soils, texture_plotter, c('l', 'scl', 'sil', 'sl'))
names(soils) <- c('l', 'scl', 'sil', 'sl')
soils1 <- soils %>%
bind_rows(.id = 'soil') %>%
pivot_longer(!soil, names_to = 'particle', values_to = 'percent') %>%
mutate(particle = str_to_lower(particle))
ggplot(data = soils1, aes(y = percent, x = soil,
fill = factor(particle, c('clay', 'silt', 'sand')))) +
geom_bar(stat = 'identity') +
labs(fill="particle") +
scale_fill_manual(values = soil_palette) +
scale_y_continuous(labels=function(x) paste0(x,"%")) +
theme_void() +
theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
legend.text = element_text(colour = 'white'),
legend.title = element_text(colour = 'white'),
axis.text.y = element_text(color = 'white'))
ggsave('../images/soil/Soil_Texture_Components-barplot.png')
p <- cowplot::plot_grid(soil_t[[1]], soil_t[[2]], soil_t[[3]], soil_t[[4]]) +
theme(plot.background = element_rect(fill = "black"))
cowplot::save_plot('../images/soil/Soil_Texture_Examples.png', p, base_width = 7,
base_height =  7)
textures4triangle <- data.frame(l, scl, sil, sl) |>
t() |>
data.frame()
png('../images/soil/Soil_Texture_Components.png')
par(col.main="white")
TT.plot(
class.sys = "USDA.TT",
tri.data = textures4triangle,
css.names = c("Clay","Silt","Sand"),
cex.axis = 1.25,
css.lab = c("Clay","Silt","Sand"),
arrows.show = TRUE, pch = 2,  cex = 2,
grid.show = T, class.lab.show = 'none',
main = 'Locations of Example Textures',
bg = 'grey10', col.axis	= 'grey60', col.main = 'white',
grid.col = 'grey30',
class.line.col = '#9AE5E6',
col.lab	= 'grey90', # class.line.col = 'grey40',
col= 'red'
)
dev.off()
rm(l, scl, sil, s)
################################################################################
#################### Alluvial fan cross section ################################
# goal have three components in base map
# a slope which is a cross section of both a alluvial fan and valley / playa
# clay, increase to maximum in playa
# silt, increase to maximum on toe of slope
# sand, decrease to lowest on playa
# the above is map 1, and shows how soil texture changes across slope
# map 2 builds on map 1, and shows an increase in salinity towards the playa
# - use geom_points on colored points to increase the concentration of flecks
# map 3 builds on map 1, and shows a decrease of large rocky fragments towards the playa
# - use geom_size  on points to reduce rocks and rock size
# map 4 combines all components.
fan_playa <- data.frame(
variable = rep('slope', times = 20),
x = 1:20,
y = (seq(20, 1)/10)
)
slope_shape <- data.frame(
x = 1:30,
y = c(9, 8.5, 8.5, 8, 7.5, 7, 6.5, 6.6, 6, 6, 6, 5.75, 5.5, 5, 5, 5, 5, 5, 4.5, 4.25, 4, 4, 4, 3.5, 3.25, 3, 3, 3, 3, 3)
)
rock_fragments <- data.frame(
x = 1:30,
boulder = c(),
y =
)
# goal have three components in base map
# a slope which is a cross section of both a alluvial fan and valley / playa
# clay, increase to maximum in playa
# silt, increase to maximum on toe of slope
# sand, decrease to lowest on playa
# the above is map 1, and shows how soil texture changes across slope
# map 2 builds on map 1, and shows an increase in salinity towards the playa
# - use geom_points on colored points to increase the concentration of flecks
# map 3 builds on map 1, and shows a decrease of large rocky fragments towards the playa
# - use geom_size  on points to reduce rocks and rock size
# map 4 combines all components.
fan_playa <- data.frame(
variable = rep('slope', times = 20),
x = 1:20,
y = (seq(20, 1)/10)
)
slope_shape <- data.frame(
x = 1:30,
y = c(9, 8.5, 8.5, 8, 7.5, 7, 6.5, 6.6, 6, 6, 6, 5.75, 5.5, 5, 5, 5, 5, 5, 4.5, 4.25, 4, 4, 4, 3.5, 3.25, 3, 3, 3, 3, 3)
)
rock_fragments <- data.frame(
x = 1:30,
boulder = c(),
y =
)
setwd('/home/sagesteppe/Documents/assoRted/Geomorphology-Lecture/scripts')
library(packcircles)
library(tidyverse)
library(soiltexture)
library(patchwork)
library(gt)
source('functions.R')
## Soil is composed of three major particles of different sizes. ##
# The soil triangle should be familiar to all of you. This is the one used
# by the USDA, although there are other formats globally - all are quite similar
# they track how much of three components are in the soil
particle_size <- data.frame(
particle = c( rep('sand', times = 5), 'silt', 'clay'),
name = c('Very Coarse Sand', 'Coarse Sand', 'Medium Sand',
'Fine Sand', 'Very Fine Sand', 'Silt', 'Clay'),
size_upper = c(2.0, 1.0, 0.500, 0.2500, 0.1250, 0.002, 0.00001),
size_lower = c(1.0, 0.5, 0.250, 0.1250, 0.0625, 0.050, 0.00200)
)
particle_size$size_midpoint = (particle_size$size_upper + particle_size$size_lower) /2
# Sandy
soil_palette <- c('#C5CBD3', '#DDA448', '#685044')
names(soil_palette) <- c('clay', 'sand', 'silt')
############################## CREATE THE SAND PARTICLE SIZE PLOT PANEL ########################
# this fn relies on 'id' each input row becomes repeated with in dat.gg, dat.gg represents the points
# on the circumference.
# Sand Particle Size layout plot
sand_palette <- c('#8D7429', '#A18031','#B58C39', '#C99840', '#DDA448' )
names(sand_palette) <-
c('Very Coarse Sand', 'Coarse Sand', 'Medium Sand', 'Fine Sand', 'Very Fine Sand')
sand_sizes <- filter(particle_size, particle == 'sand')  # reduce to just sand
sand_sizes <- sand_sizes[rep(seq_len(nrow(sand_sizes)), c(5,10,20,40,80)),] # replicate each sand type ntimes
sand_sizes <- sand_sizes %>%
group_by(name) %>%
rowwise() %>%
mutate(size = sample((size_lower*1000):(size_upper*1000), 1) / 1000) # go big to get relevant decimals
sand_list <- split(sand_sizes, f = sand_sizes$name)
sand_plots <- lapply(sand_list, sand_size_plotter) #  create plots
sand_plots <- sand_plots[names(sand_palette)] # arrange plots from coarse to fine
p <- cowplot::plot_grid(
sand_plots[[1]], sand_plots[[2]], sand_plots[[3]],
sand_plots[[4]], sand_plots[[5]], ncol = 5)
cowplot::save_plot('../images/soil/SandSizes.png', p)
################################################################################
#################   Create example soil textures  ##############################
# sandy loam
# sandy clay loam
# silt loam
png('../images/soil/Soil_Triangle.png', width = 720, height = 720)
par(col.main="white")
TT.plot( class.sys = "USDA.TT",
main = 'USDA Soil Triangle',
bg = 'grey10', col.axis	= 'grey60', col.main = 'white',
grid.col = 'grey30', #class.line.col	= 'black',
class.line.col = '#9AE5E6',
class.lab.col = 'white',
class.lab.show = 'full',
col.lab	= 'grey90')
dev.off()
# all ordered - CLAY, Silt, SAND
name_ord <- c('Clay', 'Silt', 'Sand')
l <- c(20, 35, 45)
scl <- c(30, 10, 60)
sil <- c(15, 65, 20)
sl <- c(15, 15, 70)
names(l) <- name_ord
names(scl) <- name_ord
names(sil) <- name_ord
names(sl) <- name_ord
soils <- list(l, scl, sil, sl)
# soils <- lapply(soils, function(x){ names(x) <- name_ord }) need a '[' somewhere
soil_t <- lapply(soils, texture_plotter, c('l', 'scl', 'sil', 'sl'))
names(soils) <- c('l', 'scl', 'sil', 'sl')
soils1 <- soils %>%
bind_rows(.id = 'soil') %>%
pivot_longer(!soil, names_to = 'particle', values_to = 'percent') %>%
mutate(particle = str_to_lower(particle))
ggplot(data = soils1, aes(y = percent, x = soil,
fill = factor(particle, c('clay', 'silt', 'sand')))) +
geom_bar(stat = 'identity') +
labs(fill="particle") +
scale_fill_manual(values = soil_palette) +
scale_y_continuous(labels=function(x) paste0(x,"%")) +
theme_void() +
theme(
panel.background = element_rect(fill = "black"),
plot.background = element_rect(fill = "black"),
legend.text = element_text(colour = 'white'),
legend.title = element_text(colour = 'white'),
axis.text.y = element_text(color = 'white'))
ggsave('../images/soil/Soil_Texture_Components-barplot.png')
p <- cowplot::plot_grid(soil_t[[1]], soil_t[[2]], soil_t[[3]], soil_t[[4]]) +
theme(plot.background = element_rect(fill = "black"))
cowplot::save_plot('../images/soil/Soil_Texture_Examples.png', p, base_width = 7,
base_height =  7)
textures4triangle <- data.frame(l, scl, sil, sl) |>
t() |>
data.frame()
png('../images/soil/Soil_Texture_Components.png')
par(col.main="white")
TT.plot(
class.sys = "USDA.TT",
tri.data = textures4triangle,
css.names = c("Clay","Silt","Sand"),
cex.axis = 1.25,
css.lab = c("Clay","Silt","Sand"),
arrows.show = TRUE, pch = 2,  cex = 2,
grid.show = T, class.lab.show = 'none',
main = 'Locations of Example Textures',
bg = 'grey10', col.axis	= 'grey60', col.main = 'white',
grid.col = 'grey30',
class.line.col = '#9AE5E6',
col.lab	= 'grey90', # class.line.col = 'grey40',
col= 'red'
)
dev.off()
rm(l, scl, sil, s)
################################################################################
#################### Alluvial fan cross section ################################
# goal have three components in base map
# a slope which is a cross section of both a alluvial fan and valley / playa
# clay, increase to maximum in playa
# silt, increase to maximum on toe of slope
# sand, decrease to lowest on playa
# the above is map 1, and shows how soil texture changes across slope
# map 2 builds on map 1, and shows an increase in salinity towards the playa
# - use geom_points on colored points to increase the concentration of flecks
# map 3 builds on map 1, and shows a decrease of large rocky fragments towards the playa
# - use geom_size  on points to reduce rocks and rock size
# map 4 combines all components.
fan_playa <- data.frame(
variable = rep('slope', times = 20),
x = 1:20,
y = (seq(20, 1)/10)
)
slope_shape <- data.frame(
x = 1:30,
y = c(9, 8.5, 8.5, 8, 7.5, 7, 6.5, 6.6, 6, 6, 6, 5.75, 5.5, 5, 5, 5, 5, 5, 4.5, 4.25, 4, 4, 4, 3.5, 3.25, 3, 3, 3, 3, 3)
)
rock_fragments <- data.frame(
x = 1:30,
boulder = c(),
y =
)
fan_playa <- data.frame(
variable = rep('slope', times = 20),
x = 1:20,
y = (seq(20, 1)/10)
)
slope_shape <- data.frame(
x = 1:30,
y = c(9, 8.5, 8.5, 8, 7.5, 7, 6.5, 6.6, 6, 6, 6, 5.75, 5.5, 5, 5, 5, 5, 5, 4.5, 4.25, 4, 4, 4, 3.5, 3.25, 3, 3, 3, 3, 3)
)
boulder <- data.frame(
boulder = c(
sample(0:1, size = 75, prob = c(0.5, 0.5), replace = TRUE),
sample(0:1, size = 50, prob = c(0.9, 0.1), replace = TRUE),
sample(0:1, size = 50, prob = c(1, 0.0), replace = TRUE))
)
cobbles <- data.frame(
cobbles = c(
sample(0:1, size = 75, prob = c(0.2, 0.8), replace = TRUE),
sample(0:1, size = 50, prob = c(0.5, 0.5), replace = TRUE),
sample(0:1, size = 50, prob = c(0.9, 0.1), replace = TRUE))
)
gravel <- data.frame(
gravel = c(
sample(0:1, size = 75, prob = c(0.2, 0.8), replace = TRUE),
sample(0:1, size = 50, prob = c(0.25, 0.75), replace = TRUE),
sample(0:1, size = 50, prob = c(0.3, 0.7), replace = TRUE))
)
gr <- jitter(sample(1:3, size = 175, replace = TRUE))
co <- jitter(sample(6:12, size = 175, replace = TRUE))
bo <- jitter(sample(16:25, size = 175, replace = TRUE))
rock_fragments <- cbind(boulder, cobbles, gravel) %>%
mutate(x = sort(sample(1:30, size = 175, replace = T))) %>%
pivot_longer(-x) %>%
mutate(size = vctrs::vec_interleave(bo, co, gr)) %>%
filter(value == 1)
rm(boulder, cobbles, gravel)
soil <- data.frame(
clay = jitter(seq(from = 20, to = 60, length = 20)),
silt = jitter(c(seq(from = 25, to = 60, length = 10), seq(from = 55, to = 30, length = 10))),
sand = jitter(c(seq(from = 60, to = 30, length = 15), seq(from = 25, to = 5, length = 5)))
) %>%
rowwise() %>%
mutate(
Rate = 100 / sum(clay, silt, sand),
across(clay:sand, ~ .x * Rate)) %>%
ungroup() %>%
mutate(x = 1:20) %>%
select(-Rate) %>%
pivot_longer(-x)
ggplot(soil, aes(x=x, y=value, fill=name)) +
theme_void() +
geom_area(alpha=0.6 , size=1, colour="black") +
scale_fill_manual('Component', values = soil_palette) +
scale_y_continuous(labels = function(x) paste0(x*1, "%")) +
labs(x = 'Increasing Distance from Bedrock',
y = 'Percent Component',
title = 'Soil Texture Along an Alluvial Fan and Playa') +
theme(
legend.position = 'bottom',
plot.title = element_text(hjust = 0.5),
text = element_text(color = 'white'),
#   axis.title.x=element_blank(),
#  axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
aspect.ratio = 6/9)
ggsave('../images/soil/Soil_Texture_Fan.png', width = 6, height = 6, units = 'in')
loessMod10 <- loess(y ~ x, data = slope_shape, span = 0.25)
slope_shape$y <- predict(loessMod10)
ggplot(data = slope_shape, aes(x = x, y = y)) +
geom_area(fill="#BBAB8B", alpha = 0.4) +
geom_line(color="#BBAB8B", size = 2) +
labs(title = 'Cross section of Alluvial Fan into Playa') +
ylim(0,15) +
theme_void() +
theme(
aspect.ratio = 6/9,
text = element_text(color = 'white'))
ggsave('../images/soil/Cross_Section_Fan.png',
width = 6, height = 6, units = 'in')
rock_frags <- left_join(rock_fragments, slope_shape, by = 'x') %>%
rowwise() %>%
mutate(x = jitter(x, amount = 0.5),
y = jitter(sample(0.01:y, size = 1), amount = 0.5))
ggplot(data = rock_frags, aes(x = x, y = y, size = size, color = name)) +
geom_point(fill="#BBAB8B", alpha = 0.4) +
geom_line(data = slope_shape, color="#BBAB8B", size = 2) +
labs(title = 'Rock Fragments in an Alluvial Fan',
color = 'Fragment') +
scale_size_continuous(guide = "none") +
ylim(0,15) +
theme_void() +
theme(aspect.ratio = 6/9,
text = element_text(color = 'white'),
legend.position = 'bottom')
ggsave('../images/soil/Rock_Frags_Fan.png',
width = 6, height = 6, units = 'in')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(message  = FALSE)
knitr::opts_chunk$set(warning = FALSE)
p1 <- cowplot::ggdraw() + cowplot::draw_image("./images/Sedimentary/inorganic/shale.jpg")
p2 <- cowplot::ggdraw() + cowplot::draw_image("./images/Sedimentary/inorganic/sandstone.jpg")
p3 <- cowplot::ggdraw() + cowplot::draw_image("./images/Sedimentary/inorganic/siltstone.jpg")
cowplot::plot_grid(
p1, p2, p3, NULL,
labels = c('Shale', 'Sandstone', 'Siltstone'), ncol = 2
)
